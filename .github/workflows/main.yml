name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install Qt and tools
        run: |
          sudo apt-get update
          sudo apt-get install -y qt5-default cmake make g++  # Adjust based on your needs
          sudo apt-get install -y libqt5svg5-dev
          sudo apt-get install -y libqt5x11extras5-dev

      # Build the project
      - name: Build with CMake
        run: |
          chmod +x ./build.sh
          ./build.sh
      # Upload the executable as an artifact
      - name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: visual-mark  # Name the artifact (this will appear in GitHub's artifact list)
          path: build/visual_mark  # Path to the executable (adjust this path if your executable is elsewhere)

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          tag: 'v1.0.0'  # Use a static version (can be changed with each release)
          artifacts: 'build/visual_mark'
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create a Git tag (if needed)
      #   run: |
      #     # Create a tag based on the current date or commit SHA
      #     TAG_NAME="v$(date +'%Y.%m.%d')"
      #     git tag $TAG_NAME
      #     git push origin $TAG_NAME  # Push the tag to the remote repository

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: build/visual_mark  # Path to the executable
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}